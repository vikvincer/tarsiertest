{"version":3,"sources":["../../../../src/EventManagement.js","../../../../src/main.js"],"names":["poller","detail","ondatachange","state","id","states","i","len","_this","length","config","url","createElement","interval","poster","_state","dispatchEvent","this","contains","player","container","removeChild","play","appendChild","akamai","amp","Plugin","registerPlugin"],"mappings":"qRAKSA,GAAAA,EAASC,OACTD,EAAOE,QAENC,MAAAA,kBAEJ,KAGK,MAFMC,EAADC,OAELC,EAAA,EAAAC,EAAAC,EAAAH,OAAAI,OAAAH,EAAAC,EAAAD,OACGD,EAASC,GAAAF,IAAKC,EAApB,GACSC,EAAOC,iCATpBF,OAAAK,EAAAL,yBAsBKA,SAASK,EAAOL,UAArB,IACKM,OAAMD,SAAXE,cAAA,SACKC,OAAAA,UAAkBA,mBAClBC,yRAaOd,2FAQRe,OAAKA,4DAIJC,KAAAA,OAAcZ,aAEXa,KAAKF,OAAOX,UAApBc,SAAAD,KAAAH,cACEK,OAAAC,UAAAC,YAAAJ,KAAAH,SAE0BO,SAAjBF,OAAOC,UAAZH,KAAkCE,OAAlCG,wFAOEH,OAAKJ,UAALQ,YAA4BN,KAAAH,qBAEzBK,qIAtE8BK,IAAOC,IAAIC,eAAAA,kBAAAA,EAAAA,SCGxDF,EAAOC,gBAAQE","file":"akamai/amp/eventmanagement/Eventmanagement.min.js","sourcesContent":["export default class EventManagement extends akamai.amp.Plugin {\n\n  constructor(player, config) {\n    super(player, config)\n\n    this.poller = new akamai.amp.Poller()\n    this.poller.ondatachange = (event) => {\n      const id = event.detail\n      let state = null\n\n      if (id == \"on\") {\n        state = {id: \"on\"}\n      }\n      else {\n        const states = this.states\n        for (let i = 0, len = this.states.length; i < len; i++) {\n          if (states[i].id == id) {\n            state = states[i]\n            break\n          }\n        }\n      }\n\n      if (state != null) {\n        this.state = state\n      }\n    }\n\n    this.states = config.states || []\n    this.url = config.url\n    this.interval = config.interval || 5\n    this.poster = document.createElement(\"img\")\n    this.poster.className = \"amp-event-poster\"\n  }\n\n  set url(value) {\n    this.poller.url = value\n  }\n\n  get url() {\n    return this.poller.url\n  }\n\n  get interval() {\n    return this.poller.interval / 1000\n  }\n\n  set interval(value) {\n    this.poller.interval = value * 1000\n  }\n\n  set state(value) {\n    if (this._state == value)\n      return\n\n    this._state = value\n    this.dispatchEvent(new akamai.amp.Event(\"statechange\", value))\n\n    switch (this._state.id) {\n      case \"on\":\n        if (this.player.container.contains(this.poster)) {\n          this.player.container.removeChild(this.poster)\n        }\n        if (this.player.autoplay === true)\n          this.player.play()\n      break\n\n      default:\n        if (this._state.poster != null) {\n          this.poster.src = this._state.poster\n          this.player.container.appendChild(this.poster)\n        }\n        this.player.pause()\n        this.player.displayState = akamai.amp.DisplayState.NORMAL\n      break\n    }\n  }\n\n  get state() {\n    return this._state\n  }\n\n  onready() {\n    this.poller.start()\n  }\n}\n","import \"./EventManagement.less\"\nimport EventManagement from \"./EventManagement.js\"\n\nakamai.amp.AMP.registerPlugin(\"eventmanagement\", EventManagement.factory)\n\nexport {EventManagement}\n"]}