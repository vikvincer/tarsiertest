{"version":3,"file":"Mrss.js","sources":["../../../../src/MRSS.js","../../../../src/main.js"],"sourcesContent":["export default class MRSS extends akamai.amp.Plugin {\n  constructor(player, config) {\n    super(player, config)\n\n    this.feature = \"feed\"\n    this.helper = new akamai.amp.utils.MRSSHelper()\n  }\n\n  get data() {\n    return this._data\n  }\n\n  set data(value) {\n    this._data = value\n    this.feed = this.helper.createFeed(value)\n    this.player.media = this.feed.item[0]\n    this.dispatchEvent(new akamai.amp.Event(\"changed\", this.feed))\n  }\n\n  get url() {\n    return this._url\n  }\n\n  set url(value) {\n    this._url = this.player.evaluatePaths(value)\n\n    this.dispatchEvent(new akamai.amp.Event(\"request\", this._url))\n    this.helper.getFeed(this._url)\n      .then((feed) => {\n        this.dispatchEvent(new akamai.amp.Event(\"loaded\", feed))\n        this.data = feed\n      })\n      .catch((error) => {\n        this.dispatchEvent(new akamai.amp.Event(\"error\", {error: error, url: value}))\n        this.logger.error(\"[AMP Feed Load Error]\", this._url, error)\n      })\n  }\n\n  transform(feed) {\n    let promise = Promise.resolve(feed)\n    const helper = new akamai.amp.utils.MRSSHelper()\n\n    if (typeof feed == \"string\") {\n      promise = helper.getFeed(feed)\n    }\n\n    promise = promise.then((feed) => {\n      return helper.createFeed(feed).item[0]\n    })\n\n    return promise\n  }\n\n  onready() {\n    const url = this.config.url\n    const data = this.config.data\n    let func = null\n\n    if (url != null && url != \"\")\n      func = () => this.url = url\n    else if (data != null)\n      func = () => this.data = data\n\n    if (typeof func == \"function\")\n      setTimeout(func, 1)\n  }\n}\n","import MRSS from \"./MRSS.js\"\n\nakamai.amp.AMP.registerPlugin(\"mrss\", MRSS.factory)\n\nexport {MRSS}\n"],"names":["MRSS","player","config","feature","helper","akamai","amp","utils","MRSSHelper","feed","promise","Promise","resolve","getFeed","then","createFeed","item","url","data","func","setTimeout","_data","value","media","dispatchEvent","Event","_url","evaluatePaths","catch","error","logger","Plugin","AMP","registerPlugin","factory"],"mappings":";;;;;IAAqBA;;;gBACPC,MAAZ,EAAoBC,MAApB,EAA4B;;;wHACpBD,MADoB,EACZC,MADY;;UAGrBC,OAAL,GAAe,MAAf;UACKC,MAAL,GAAc,IAAIC,OAAOC,GAAP,CAAWC,KAAX,CAAiBC,UAArB,EAAd;;;;;;8BAiCQC,MAAM;UACVC,UAAUC,QAAQC,OAAR,CAAgBH,IAAhB,CAAd;UACML,SAAS,IAAIC,OAAOC,GAAP,CAAWC,KAAX,CAAiBC,UAArB,EAAf;;UAEI,OAAOC,IAAP,IAAe,QAAnB,EAA6B;kBACjBL,OAAOS,OAAP,CAAeJ,IAAf,CAAV;;;gBAGQC,QAAQI,IAAR,CAAa,UAACL,IAAD,EAAU;eACxBL,OAAOW,UAAP,CAAkBN,IAAlB,EAAwBO,IAAxB,CAA6B,CAA7B,CAAP;OADQ,CAAV;;aAION,OAAP;;;;8BAGQ;;;UACFO,MAAM,KAAKf,MAAL,CAAYe,GAAxB;UACMC,OAAO,KAAKhB,MAAL,CAAYgB,IAAzB;UACIC,OAAO,IAAX;;UAEIF,OAAO,IAAP,IAAeA,OAAO,EAA1B,EACEE,OAAO;eAAM,OAAKF,GAAL,GAAWA,GAAjB;OAAP,CADF,KAEK,IAAIC,QAAQ,IAAZ,EACHC,OAAO;eAAM,OAAKD,IAAL,GAAYA,IAAlB;OAAP;;UAEE,OAAOC,IAAP,IAAe,UAAnB,EACEC,WAAWD,IAAX,EAAiB,CAAjB;;;;wBAxDO;aACF,KAAKE,KAAZ;;sBAGOC,OAAO;WACTD,KAAL,GAAaC,KAAb;WACKb,IAAL,GAAY,KAAKL,MAAL,CAAYW,UAAZ,CAAuBO,KAAvB,CAAZ;WACKrB,MAAL,CAAYsB,KAAZ,GAAoB,KAAKd,IAAL,CAAUO,IAAV,CAAe,CAAf,CAApB;WACKQ,aAAL,CAAmB,IAAInB,OAAOC,GAAP,CAAWmB,KAAf,CAAqB,SAArB,EAAgC,KAAKhB,IAArC,CAAnB;;;;wBAGQ;aACD,KAAKiB,IAAZ;;sBAGMJ,OAAO;;;WACRI,IAAL,GAAY,KAAKzB,MAAL,CAAY0B,aAAZ,CAA0BL,KAA1B,CAAZ;;WAEKE,aAAL,CAAmB,IAAInB,OAAOC,GAAP,CAAWmB,KAAf,CAAqB,SAArB,EAAgC,KAAKC,IAArC,CAAnB;WACKtB,MAAL,CAAYS,OAAZ,CAAoB,KAAKa,IAAzB,EACGZ,IADH,CACQ,UAACL,IAAD,EAAU;eACTe,aAAL,CAAmB,IAAInB,OAAOC,GAAP,CAAWmB,KAAf,CAAqB,QAArB,EAA+BhB,IAA/B,CAAnB;eACKS,IAAL,GAAYT,IAAZ;OAHJ,EAKGmB,KALH,CAKS,UAACC,KAAD,EAAW;eACXL,aAAL,CAAmB,IAAInB,OAAOC,GAAP,CAAWmB,KAAf,CAAqB,OAArB,EAA8B,EAACI,OAAOA,KAAR,EAAeZ,KAAKK,KAApB,EAA9B,CAAnB;eACKQ,MAAL,CAAYD,KAAZ,CAAkB,uBAAlB,EAA2C,OAAKH,IAAhD,EAAsDG,KAAtD;OAPJ;;;;EA3B8BxB,OAAOC,GAAP,CAAWyB;;ACE7C1B,OAAOC,GAAP,CAAW0B,GAAX,CAAeC,cAAf,CAA8B,MAA9B,EAAsCjC,KAAKkC,OAA3C,EAEA;;;;"}