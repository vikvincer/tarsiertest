{"version":3,"sources":["../../../../src/MRSS.js","../../../../src/main.js"],"names":["feature","feed","MRSSHelper","akamai","helper","url","func","data","_this2","setTimeout","_data","value","createFeed","media","this","item","Event","_url","player","evaluatePaths","dispatchEvent","getFeed","amp","error","_this3","logger","Plugin","registerPlugin"],"mappings":"2QAISA,yIAkCGC,IAAAA,MAAMC,iBAEKC,gBAAbC,6JAcAC,EAAM,IAED,OAAPC,GAAJ,IAAAD,EAAAC,EAAA,2BAEmBD,MAARE,IAAQF,EACjBC,iBAAaE,GAAKH,KAAMA,IAExB,kBAAAC,IAAAG,WAAAH,EAAA,gEApDUI,+BAGLC,OAAOC,WAAAD,QACTD,OAALG,MAAAC,KAAAb,KAAAc,KAAA,QACKd,cAAYG,GAALD,QAAYS,IAAZI,MAAA,UAAZF,KAAAb,kEAMAU,0DAIKM,cAAYC,GAALf,QAAYgB,IAAAA,MAAcR,UAAtCG,KAAAG,yDAEKG,cAAkBjB,GAAAA,QAAWa,IAAAA,MAAM,SAAWf,MAC9CG,KAAOiB,UAEHD,SAAAA,KACAb,cAAL,GAAAJ,QAAAmB,IAAAN,MAAA,SAAAO,MAAAA,EAAAlB,IAAAM,KAHJa,EAKSC,OAAAF,MAACA,wBAAUC,EAAAP,KAAAM,sCAhCUpB,IAAOmB,IAAII,eAAAA,OAAAA,EAAAA,SCE7CvB,EAAOmB,KAAQK","file":"akamai/amp/mrss/Mrss.min.js","sourcesContent":["export default class MRSS extends akamai.amp.Plugin {\n  constructor(player, config) {\n    super(player, config)\n\n    this.feature = \"feed\"\n    this.helper = new akamai.amp.utils.MRSSHelper()\n  }\n\n  get data() {\n    return this._data\n  }\n\n  set data(value) {\n    this._data = value\n    this.feed = this.helper.createFeed(value)\n    this.player.media = this.feed.item[0]\n    this.dispatchEvent(new akamai.amp.Event(\"changed\", this.feed))\n  }\n\n  get url() {\n    return this._url\n  }\n\n  set url(value) {\n    this._url = this.player.evaluatePaths(value)\n\n    this.dispatchEvent(new akamai.amp.Event(\"request\", this._url))\n    this.helper.getFeed(this._url)\n      .then((feed) => {\n        this.dispatchEvent(new akamai.amp.Event(\"loaded\", feed))\n        this.data = feed\n      })\n      .catch((error) => {\n        this.dispatchEvent(new akamai.amp.Event(\"error\", {error: error, url: value}))\n        this.logger.error(\"[AMP Feed Load Error]\", this._url, error)\n      })\n  }\n\n  transform(feed) {\n    let promise = Promise.resolve(feed)\n    const helper = new akamai.amp.utils.MRSSHelper()\n\n    if (typeof feed == \"string\") {\n      promise = helper.getFeed(feed)\n    }\n\n    promise = promise.then((feed) => {\n      return helper.createFeed(feed).item[0]\n    })\n\n    return promise\n  }\n\n  onready() {\n    const url = this.config.url\n    const data = this.config.data\n    let func = null\n\n    if (url != null && url != \"\")\n      func = () => this.url = url\n    else if (data != null)\n      func = () => this.data = data\n\n    if (typeof func == \"function\")\n      setTimeout(func, 1)\n  }\n}\n","import MRSS from \"./MRSS.js\"\n\nakamai.amp.AMP.registerPlugin(\"mrss\", MRSS.factory)\n\nexport {MRSS}\n"]}