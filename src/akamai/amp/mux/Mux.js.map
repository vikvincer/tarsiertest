{"version":3,"file":"Mux.js","sources":["../../../../src/Mux.js","../../../../src/main.js"],"sourcesContent":["\nexport default class Mux {\n  constructor(player, config, mux) {\n    this.player = player\n    this.config = config\n    this.sdk = mux\n    this.data = Object.assign({\n      player_software_name: \"AMP\",\n      player_software_version: player.version,\n      player_mux_plugin_name: \"amp-mux\",\n      player_mux_plugin_version: \"1.66.0\",\n      player_init_time: player.initTime,\n    }, config.data)\n    \n    const element = player.container\n    \n    player.addEventListener(\"ready\", function (event) {\n      const ads = player.ads || {getEnabled: function () { return false; }, getInProgress: function () { return false; }}\n      \n      function mapEvents(target, map, isAdEvent) {\n        for (var muxEvent in map) {\n          target.addEventListener(map[muxEvent], function (element, muxEvent, playerEvent) {\n            if (!isAdEvent && ads.getInProgress())\n              return\n              \n            if (!/timeupdate/.test(muxEvent)) \n              console.log(\"mux.emit\", muxEvent); // TODO: Replace with player.logger.log\n              \n            mux.emit(element, muxEvent)\n          }.bind(null, element, muxEvent))\n        }\n      }\n      \n      mapEvents(player, {\n        \"play\": \"play\",\n        \"playing\": \"playing\",\n        \"pause\": \"pause\",\n        \"timeupdate\": \"timeupdate\",\n        \"seeking\": \"seeking\",\n        \"seeked\": \"seeked\",\n        \"error\": \"error\",\n        \"ended\": \"ended\",\n        \"stalled\": \"stalled\"\n      })\n      \n      player.addEventListener(\"mediachange\", function (event) {\n        var media = event.detail;\n        console.log(\"mux.emit\", \"videochange\");\n        mux.emit(element, \"videochange\", {\n          video_id: media.guid,\n          video_title: media.title,\n          video_duration: media.duration,\n          video_is_live: (media.temporalType == \"live\"),\n          video_poster_url: media.poster,\n          video_source_url: media.src,\n          video_source_mime_type: media.type\n        })\n      })\n      \n      if (ads.getEnabled()) {\n        mapEvents(ads, {\n          \"adrequest\": \"request\",\n          \"adresponse\": \"response\",\n          \"adbreakstart\": \"breakstart\",\n          \"adplay\": \"play\",\n          \"adplaying\": \"playing\",\n          \"adpause\": \"pause\",\n          \"adfirstquartile\": \"firstquartile\",\n          \"admidpoint\": \"midpoint\",\n          \"adthirdquartile\": \"thirdquartile\",\n          \"adended\": \"ended\",\n          \"adbreakend\": \"breakend\",\n          \"aderror\": \"error\"\n        }, true)\n        \n        mapEvents(ads, {\n          \"adplay\": \"breakstart\"\n        }, true)\n      }\n      \n      mux.emit(element, \"playerready\")\n    })\n    \n    mux.init(element, this)\n  }\n\n  getStateData() {\n    var player = this.player\n    var error = player.error || {}\n    var mediaElement = player.mediaElement\n    return {\n      video_language_code: player.language,\n      video_source_duration: isNaN(mediaElement.duration) ? undefined : Math.round(mediaElement.duration * 1000),\n      video_source_height: mediaElement.videoHeight,\n      video_source_width: mediaElement.videoWidth,\n      player_is_paused: player.paused,\n      player_playhead_time: this.getPlayheadTime(),\n      player_is_fullscreen: (player.displayState == \"fullscreen\"),\n      player_autoplay_on: player.autoplay,\n      player_preload_on: mediaElement.preload,\n      player_width: element.clientWidth,\n      player_height: element.clientHeight,\n      player_language_code: player.language,\n      player_error_code: error.code,\n      player_error_message: error.message\n    }\n  }\n  \n  getPlayheadTime() {\n    return Math.round(this.player.getCurrentTime() * 1000)\n  }\n  \n  static create(player, config) {\n    return new Promise((resolve, reject) => {\n      resolve(new Mux(player, config, mux))\n    })\n  }\n}\n","import Mux from \"./Mux.js\"\n\nakamai.amp.AMP.registerPlugin(\"mux\", Mux.create)\n\nexport {Mux}"],"names":["Mux","player","config","mux","sdk","data","Object","assign","version","initTime","element","container","addEventListener","event","ads","getEnabled","getInProgress","mapEvents","target","map","isAdEvent","muxEvent","playerEvent","test","console","log","emit","bind","media","detail","guid","title","duration","temporalType","poster","src","type","init","error","mediaElement","language","isNaN","undefined","Math","round","videoHeight","videoWidth","paused","getPlayheadTime","displayState","autoplay","preload","clientWidth","clientHeight","code","message","getCurrentTime","Promise","resolve","reject","akamai","amp","AMP","registerPlugin","create"],"mappings":"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"}